diff -Naurp LibreELEC-settings/resources/lib/defaults.py LibreELEC-settings-patch/resources/lib/defaults.py
--- LibreELEC-settings/resources/lib/defaults.py	2025-05-20 03:23:29.000000000 +0000
+++ LibreELEC-settings-patch/resources/lib/defaults.py	2025-06-07 07:02:25.000000000 +0000
@@ -48,10 +48,10 @@ services = {
     'SAMBA_SMDB': '/usr/sbin/smbd',
     'D_SAMBA_WORKGROUP': 'WORKGROUP',
     'D_SAMBA_SECURE': '0',
-    'D_SAMBA_USERNAME': 'libreelec',
-    'D_SAMBA_PASSWORD': 'libreelec',
-    'D_SAMBA_MINPROTOCOL': 'SMB2',
-    'D_SAMBA_MAXPROTOCOL': 'SMB3',
+    'D_SAMBA_USERNAME': 'mcpc',
+    'D_SAMBA_PASSWORD': 'mcpc',
+    'D_SAMBA_MINPROTOCOL': 'SMB1',
+    'D_SAMBA_MAXPROTOCOL': 'SMB1',
     'D_SAMBA_AUTOSHARE': '1',
     'SSH_DAEMON': '/usr/sbin/sshd',
     'OPT_SSH_NOPASSWD': "-o 'PasswordAuthentication no'",
@@ -85,13 +85,7 @@ system = {
     'JOURNALD_CONFIG_FILE': '/storage/.cache/journald.conf.d/00_settings.conf'
     }
 
-updates = {
-    'ENABLED': not os.path.exists('/dev/.update_disabled'),
-    'UPDATE_REQUEST_URL': 'https://update.libreelec.tv/updates.php',
-    'UPDATE_DOWNLOAD_URL': 'http://%s.libreelec.tv/%s',
-    'LOCAL_UPDATE_DIR': '/storage/.update/',
-    }
-
+tvserver = {'ENABLED': True}
 about = {'ENABLED': True}
 
 _services = {
@@ -102,4 +96,6 @@ _services = {
     'obexd': ['obex.service'],
     'crond': ['cron.service'],
     'iptables': ['iptables.service'],
+    'tvlink': ['tvlink.service'],
+    'hid-remote': ['hid-remote.service'],
     }
diff -Naurp LibreELEC-settings/resources/lib/modules/services.py LibreELEC-settings-patch/resources/lib/modules/services.py
--- LibreELEC-settings/resources/lib/modules/services.py	2025-05-20 03:23:29.000000000 +0000
+++ LibreELEC-settings-patch/resources/lib/modules/services.py	2025-06-07 07:07:15.000000000 +0000
@@ -279,6 +279,19 @@ class services(modules.Module):
                         },
                     },
                 },
+            'hid-remote': {
+                'order': 5,
+                'name': 43010,
+                'not_supported': [],
+                'settings': {'hidremote_autostart': {
+                    'order': 1,
+                    'name': 43011,
+                    'value': None,
+                    'action': 'initialize_hidremote',
+                    'type': 'bool',
+                    'InfoText': 4311,
+                    }},
+                },
             }
 
     @log.log_function()
@@ -289,6 +302,7 @@ class services(modules.Module):
         self.initialize_avahi(service=1)
         self.initialize_cron(service=1)
         self.initialize_bluetooth(service=1)
+        self.initialize_hidremote(service=1)
 
     @log.log_function()
     def do_init(self):
@@ -364,6 +378,8 @@ class services(modules.Module):
                 self.struct['bluez']['settings']['idle_timeout']['value'] = oe.read_setting('bluetooth', 'idle_timeout')
             else:
                 self.struct['bluez']['hidden'] = 'true'
+        # HID-REMOTE
+        self.struct['hid-remote']['settings']['hidremote_autostart']['value'] = oe.get_service_state('hid-remote')
 
     @log.log_function()
     def initialize_samba(self, **kwargs):
@@ -438,6 +454,19 @@ class services(modules.Module):
         oe.set_service('crond', options, state)
 
     @log.log_function()
+    def initialize_hidremote(self, **kwargs):
+        if 'listItem' in kwargs:
+            self.set_value(kwargs['listItem'])
+        options = {}
+        if self.struct['hid-remote']['settings']['hidremote_autostart']['value'] == '1':
+            subprocess.call(['/usr/bin/systemctl', 'stop', 'eventlircd.service'], close_fds=True)
+            state = 1
+        else:
+            subprocess.call(['/usr/bin/systemctl', 'start', 'eventlircd.service'], close_fds=True)
+            state = 0
+        oe.set_service('hid-remote', options, state)
+
+    @log.log_function()
     def initialize_bluetooth(self, **kwargs):
         if 'listItem' in kwargs:
             self.set_value(kwargs['listItem'])
@@ -544,7 +573,7 @@ class services(modules.Module):
         SSHchange = False
         newpwd = xbmcDialog.input(oe._(746))
         if newpwd:
-            if newpwd == "libreelec":
+            if newpwd == "mcpc":
                 if os.path.isfile('/storage/.cache/shadow'):
                     os.remove('/storage/.cache/shadow')
                 shutil.copy2('/usr/cache/shadow', '/storage/.cache/shadow')
diff -Naurp LibreELEC-settings/resources/lib/modules/tvserver.py LibreELEC-settings-patch/resources/lib/modules/tvserver.py
--- LibreELEC-settings/resources/lib/modules/tvserver.py	1970-01-01 00:00:00.000000000 +0000
+++ LibreELEC-settings-patch/resources/lib/modules/tvserver.py	2025-06-07 07:39:06.000000000 +0000
@@ -0,0 +1,135 @@
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2009-2013 Stephan Raue (stephan@openelec.tv)
+# Copyright (C) 2011-present AlexELEC (https://alexelec.github.io)
+
+import os
+import log
+import modules
+import oe
+import xbmcgui
+
+xbmcDialog = xbmcgui.Dialog()
+
+class tvserver(modules.Module):
+
+    ENABLED = False
+
+    menu = {'91': {
+        'name': 43000,
+        'menuLoader': 'load_menu',
+        'listTyp': 'list',
+        'InfoText': 4300,
+        }}
+
+    @log.log_function()
+    def __init__(self, oeMain):
+        super().__init__()
+        self.struct = {
+            'tvlink': {
+                'order': 1,
+                'name': 42025,
+                'not_supported': [],
+                'settings': {
+                    'enable_tvlink': {
+                        'order': 1,
+                        'name': 42026,
+                        'value': '0',
+                        'action': 'initialize_tvlink',
+                        'type': 'bool',
+                        'InfoText': 4226,
+                        },
+                    },
+                },
+            }
+
+    @log.log_function()
+    def start_service(self):
+        self.load_values()
+        self.initialize_tvlink(service=1)
+
+    @log.log_function()
+    def do_init(self):
+        self.load_values()
+
+    @log.log_function()
+    def set_value(self, listItem):
+        self.struct[listItem.getProperty('category')]['settings'][listItem.getProperty('entry')]['value'] = listItem.getProperty('value')
+
+    @log.log_function()
+    def load_menu(self, focusItem):
+        oe.winOeMain.build_menu(self.struct)
+
+    @log.log_function()
+    def load_values(self):
+        self.struct['tvlink']['settings']['enable_tvlink']['value'] = oe.get_service_state('tvlink')
+
+    @log.log_function()
+    def initialize_tvlink(self, **kwargs):
+        if 'listItem' in kwargs:
+            self.set_value(kwargs['listItem'])
+        options = {}
+        state = 0
+        if self.struct['tvlink']['settings']['enable_tvlink']['value'] == '1':
+            if not os.path.exists('/storage/.config/tvlink/tvlink'):
+                tvl_status = self.get_tvl_source()
+                if tvl_status == 'OK':
+                    oe.notify(oe._(32363), 'Starting TVLINK Server...')
+                else:
+                    self.struct['tvlink']['settings']['enable_tvlink']['value'] = '0'
+                    answer = xbmcDialog.ok('Install TVLINK Server',
+                            'Error: The program is not installed, try again.')
+                    return
+            state = 1
+        oe.set_service('tvlink', options, state)
+
+    @log.log_function()
+    def get_tvl_source(self):
+        import sys
+        import tarfile
+        import requests
+        from platform import machine
+        from urllib.parse import urlparse
+
+        ARCH = machine()
+        PYTHON_VER = f"{sys.version_info.major}.{sys.version_info.minor}"
+        git_url = 'https://github.com/AlexELEC/TVLINK-Releases/releases'
+
+        try:
+            # get last version
+            r = requests.get(f'{git_url}/latest', verify=False, allow_redirects=False, timeout=5)
+            last_ver_url = r.headers['Location']
+            last_ver_path = urlparse(last_ver_url).path
+            _, VER = os.path.split(last_ver_path)
+
+            # check Distibution
+            DISTRIB = ''
+            if ARCH == 'x86_64':
+                DISTRIB = '-LibreElec'
+
+            # sample: TVLINK-4.2.4-x86_64-python_3.12-LibreElec.tar.bz2
+            LAST_DNL_URL = f"{git_url}/download/{VER}/TVLINK-{VER}-{ARCH}-python_{PYTHON_VER}{DISTRIB}.tar.bz2"
+
+            # try request new version file
+            r = requests.get(LAST_DNL_URL, verify=False, timeout=10)
+            r.raise_for_status()
+        except:
+            return 'ERROR'
+
+        install_dir = "/storage/.config/tvlink"
+        if not os.path.isdir(install_dir):
+            os.makedirs(install_dir)
+
+        tvl_patch = f"{oe.TEMP}TVLINK-{VER}.tar.bz2"
+        downloaded = oe.download_file(LAST_DNL_URL, tvl_patch)
+        if not downloaded:
+            return 'ERROR'
+        oe.notify(oe._(32363), 'Install TVLINK Server...')
+
+        try:
+            with tarfile.open(tvl_patch, "r:bz2") as tar:
+                tar.extractall(install_dir)
+            os.remove(tvl_patch)
+        except:
+            return 'ERROR'
+
+        return 'OK'
