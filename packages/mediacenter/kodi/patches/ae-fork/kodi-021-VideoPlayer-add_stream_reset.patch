diff -Naurp kodi/xbmc/addons/kodi-dev-kit/include/kodi/c-api/addon-instance/inputstream/demux_packet.h kodi-patch/xbmc/addons/kodi-dev-kit/include/kodi/c-api/addon-instance/inputstream/demux_packet.h
--- kodi/xbmc/addons/kodi-dev-kit/include/kodi/c-api/addon-instance/inputstream/demux_packet.h	2025-06-14 10:54:08.000000000 +0000
+++ kodi-patch/xbmc/addons/kodi-dev-kit/include/kodi/c-api/addon-instance/inputstream/demux_packet.h	2025-06-19 15:00:20.000000000 +0000
@@ -16,6 +16,7 @@
 
 #define DEMUX_SPECIALID_STREAMINFO -10
 #define DEMUX_SPECIALID_STREAMCHANGE -11
+#define DEMUX_SPECIALID_STREAMRESET -22
 
 #ifdef __cplusplus
 extern "C"
diff -Naurp kodi/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp kodi-patch/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
--- kodi/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp	2025-06-19 07:18:20.189630266 +0000
+++ kodi-patch/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp	2025-06-21 06:48:48.000000000 +0000
@@ -209,6 +209,9 @@ CDVDDemuxFFmpeg::CDVDDemuxFFmpeg() : CDV
   m_bSup = false;
   m_speed = DVD_PLAYSPEED_NORMAL;
   m_program = UINT_MAX;
+  m_oldStreams = 0;
+  m_oldProgCount = 0;
+  m_bResetStream = false;
   m_pkt.result = -1;
   memset(&m_pkt.pkt, 0, sizeof(AVPacket));
   m_streaminfo = true; /* set to true if we want to look for streams before playback */
@@ -1012,16 +1015,27 @@ DemuxPacket* CDVDDemuxFFmpeg::ReadIntern
 
         if (IsProgramChange())
         {
-          CLog::Log(LOGINFO, "CDVDDemuxFFmpeg::Read() stream change");
-          av_dump_format(m_pFormatContext, 0, CURL::GetRedacted(m_pInput->GetFileName()).c_str(),
-                         0);
-
-          // update streams
-          CreateStreams(m_program);
-
-          pPacket = CDVDDemuxUtils::AllocateDemuxPacket(0);
-          pPacket->iStreamId = DMX_SPECIALID_STREAMCHANGE;
-          pPacket->demuxerId = m_demuxerId;
+          CLog::Log(LOGINFO, "CDVDDemuxFFmpeg::Read(): stream change");
+          av_dump_format(m_pFormatContext, 0, CURL::GetRedacted(m_pInput->GetFileName()).c_str(), 0);
+
+          if (m_bResetStream) // reset stream
+          {
+            m_bResetStream = false;
+            Reset();
+
+            CreateStreams(m_program);
+            pPacket = CDVDDemuxUtils::AllocateDemuxPacket(0);
+            pPacket->iStreamId = DMX_SPECIALID_STREAMRESET;
+            pPacket->demuxerId = m_demuxerId;
+            CLog::Log(LOGINFO, "CDVDDemuxFFmpeg::Read(): immediate STREAMRESET");
+          }
+          else // update streams
+          {
+            CreateStreams(m_program);
+            pPacket = CDVDDemuxUtils::AllocateDemuxPacket(0);
+            pPacket->iStreamId = DMX_SPECIALID_STREAMCHANGE;
+            pPacket->demuxerId = m_demuxerId;
+          }
 
           return pPacket;
         }
@@ -2064,6 +2078,29 @@ std::string CDVDDemuxFFmpeg::GetStreamCo
 
 bool CDVDDemuxFFmpeg::IsProgramChange()
 {
+  unsigned int m_newStreams = m_pFormatContext->nb_streams;
+  unsigned int m_newProgCount = m_pFormatContext->nb_programs;
+
+  if (m_oldStreams == 0)
+    m_oldStreams = m_newStreams;
+  if (m_oldProgCount == 0)
+    m_oldProgCount = m_newProgCount;
+
+  if (m_newStreams > m_oldStreams+1 || m_newProgCount > m_oldProgCount)
+  {
+    // reset streams
+    CLog::Log(LOGINFO, "CDVDDemuxFFmpeg::Read() change info: old/new streams [{}/{}] | old/new programs [{}/{}]", m_oldStreams, m_newStreams, m_oldProgCount, m_newProgCount);
+    m_oldStreams = 0;
+    m_oldProgCount = 0;
+    m_bResetStream = true;
+    return true;
+  }
+  else
+  {
+    m_oldStreams = m_newStreams;
+    m_oldProgCount = m_newProgCount;
+  }
+
   if (m_program == UINT_MAX)
     return false;
 
diff -Naurp kodi/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h kodi-patch/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h
--- kodi/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h	2025-06-14 10:54:08.000000000 +0000
+++ kodi-patch/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h	2025-06-20 14:10:33.000000000 +0000
@@ -170,6 +170,11 @@ protected:
     int      result;    // result from av_read_packet
   }m_pkt;
 
+  // reset steram
+  bool     m_bResetStream;
+  unsigned int m_oldStreams;
+  unsigned int m_oldProgCount;
+
   bool m_streaminfo;
   bool m_reopen = false;
   bool m_checkTransportStream;
diff -Naurp kodi/xbmc/cores/VideoPlayer/Interface/DemuxPacket.h kodi-patch/xbmc/cores/VideoPlayer/Interface/DemuxPacket.h
--- kodi/xbmc/cores/VideoPlayer/Interface/DemuxPacket.h	2025-06-14 10:54:08.000000000 +0000
+++ kodi-patch/xbmc/cores/VideoPlayer/Interface/DemuxPacket.h	2025-06-19 15:01:38.000000000 +0000
@@ -13,6 +13,7 @@
 
 #define DMX_SPECIALID_STREAMINFO DEMUX_SPECIALID_STREAMINFO
 #define DMX_SPECIALID_STREAMCHANGE DEMUX_SPECIALID_STREAMCHANGE
+#define DMX_SPECIALID_STREAMRESET DEMUX_SPECIALID_STREAMRESET
 
 #ifdef __cplusplus
 extern "C"
diff -Naurp kodi/xbmc/cores/VideoPlayer/VideoPlayer.cpp kodi-patch/xbmc/cores/VideoPlayer/VideoPlayer.cpp
--- kodi/xbmc/cores/VideoPlayer/VideoPlayer.cpp	2025-06-19 07:18:20.205629985 +0000
+++ kodi-patch/xbmc/cores/VideoPlayer/VideoPlayer.cpp	2025-06-20 14:10:49.000000000 +0000
@@ -1187,6 +1187,29 @@ bool CVideoPlayer::ReadPacket(DemuxPacke
       return true;
     }
 
+    // stream reset
+    if (packet->iStreamId == DMX_SPECIALID_STREAMRESET)
+    {
+      CLog::Log(LOGINFO, "VideoPlayer::ReadPacket(): received DMX_SPECIALID_STREAMRESET");
+      m_SelectionStreams.Clear(STREAM_NONE, STREAM_SOURCE_DEMUX);
+      m_SelectionStreams.Update(m_pInputStream, m_pDemuxer.get());
+      m_pDemuxer->GetPrograms(m_programs);
+      UpdateContent();
+
+      CloseStream(m_CurrentVideo, false);
+      m_processInfo->ResetVideoCodecInfo();
+
+      CloseStream(m_CurrentAudio, false);
+      m_processInfo->ResetAudioCodecInfo();
+
+      OpenDefaultStreams(true);
+
+      m_HasVideo = (m_CurrentVideo.id >= 0);
+      m_HasAudio = (m_CurrentAudio.id >= 0);
+
+      return true;
+    }
+
     UpdateCorrection(packet, m_offset_pts);
 
     if(packet->iStreamId < 0)
